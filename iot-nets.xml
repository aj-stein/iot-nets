<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.12 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>

<rfc ipr="trust200902" docName="draft-moran-iot-nets-01" category="info">

  <front>
    <title abbrev="IoT networking security guidelines">A summary of security-enabling technologies for IoT devices</title>

    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>Brendan.Moran@arm.com</email>
      </address>
    </author>

    <date year="2022" month="July" day="12"/>

    <area>Security</area>
    <workgroup>IOTOPS</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The IETF has developed security technologies that help to secure the Internet of Things even over constrained networks and when targetting constrained nodes. These technologies can be used independenly or can be composed into larger systems to mitigate a variety of threats. This documents illustrates an overview over these technologies and highlights their relationships. Ultimately, a threat model is presented as a basis to derive requirements that interconnect existing and emerging solution technologies.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>This memo serves as an entry-point to detail which technologies are available for use in IoT networks and to enable IoT designers to discover technologies that may solve their problems. This draft addresses.</t>

<t>This draft addresses six trustworthiness problems in IoT devices; expressed simply as six questions:</t>

<t><list style="numbers">
  <t>What software is my device running?</t>
  <t>How should my device connect to a network?</t>
  <t>With which systems should my device communicate?</t>
  <t>What is the provenance of my device's software and corresponding policies?</t>
  <t>Who is authorised to initiate a software update and under which conditions?</t>
  <t>How should my device trust updates to its software?</t>
</list></t>

<t>Each of these questions is answered by recently developed or developing standards. Each of these questions hides a security threat; so these threats are detailed in a threat model.</t>

</section>
<section anchor="threats-and-risks-to-iot-deployments"><name>Threats and Risks to IoT Deployments</name>

<t>For this threat model to be useful to implementers, there are certain usability requirements that must be included to explain the origin of a threat. These are noted where necessary.</t>

<t>Sections are organised in groups of:</t>

<t><list style="symbols">
  <t>usability requirement (if needed)</t>
  <t>threat</t>
  <t>security requirement</t>
  <t>mitigating technologies</t>
</list></t>

<section anchor="threat-iot-network-credential-exposure"><name>Threat: IoT Network Credential Exposure</name>

<t>Network Credential Exposure describes the potential for exposure of credentials, including cryptographic material, used to access an IoT network. Note that "network" here describes a logical network, such as a LwM2M server and its clients.</t>

<t>Each physical network technology provides its own onboarding techniques. Recommended practice is to follow best practices for the physical network technology in use.</t>

<section anchor="requsenetcredentials"><name>REQ.USE.NET.CREDENTIALS</name>

<t>It must be possible to provide a device with credentials to access a network. This is typically referred to as device onboarding. This may be done by the manufacturer, the supply chain, the installer, or the end user. It may be done by the device or on behalf of the device by a trusted third party.</t>

</section>
<section anchor="threatiotnetcredentials"><name>THREAT.IOT.NET.CREDENTIALS</name>

<t>A threat actor extracts the credentials from a device or by eavesdropping on the credential provisioning flow</t>

</section>
<section anchor="reqsecnetcredentials"><name>REQ.SEC.NET.CREDENTIALS</name>

<t>Network access credentials must be provisioned to a device in a way that secures them against eavesdropping or extraction.</t>

</section>
<section anchor="technologies-to-mitigate-threatiotnetcredentials"><name>Technologies to Mitigate THREAT.IOT.NET.CREDENTIALS</name>

<t>Several technologies are available for device onboarding:</t>

<t><list style="symbols">
  <t>Lightweight M2M Bootstrap <xref target="LwM2M"/> provides a mechanism to provision keying material and configuration of any kind, according to a well-defined data model.</t>
  <t>FIDO Device Onboard <xref target="FDO"/> provides a mechanism to deliver an arbitrary block of data to devices. This block of data can contain trust anchors, cryptographic information, and other device configuration.</t>
  <t>BRSKI <xref target="RFC8995"/> provides a mechanism for "Bootstrap Distribution of CA Certificates", as described in <xref target="RFC7030"></xref>, Section 4.1.1.  In the process, a TLS connection is established that can be directly used for Enrollment over Secure Transport (EST).</t>
  <t>Enrollment over Secure Transport (EST) <xref target="RFC7030"/> provides a mechanism to deliver certificates and, optionally, private keys to devices.</t>
</list></t>

</section>
</section>
<section anchor="threat-trust-anchor-private-key-disclosure"><name>Threat: Trust Anchor Private Key Disclosure</name>

<t>When a trust anchor of a device is used regularly, the chances of its private key being disclosed increase.</t>

<section anchor="threatiottadisclosure"><name>THREAT.IOT.TA.DISCLOSURE</name>

<t>A private key trusted by one or more devices is disclosed. This could be caused by: a threat actor within the organisation, a compromise of a service using the key, etc.</t>

</section>
<section anchor="reqsectarotation"><name>REQ.SEC.TA.ROTATION</name>

<t>It must be possible to deploy new keys to devices in order to update their active trust anchors. This does not mean that the ultimate trust anchor over a device is changed, but that its delegates are changed, enabling infrequent use of the ultimate trust anchor and higher security key management protocols to be deployed, such as key ceremonies and M of N threshold signatures.</t>

</section>
<section anchor="technologies-to-mitigate-threatiottadisclosure"><name>Technologies to mitigate THREAT.IOT.TA.DISCLOSURE</name>

<t>Several technologies are available for trust anchor rotation:</t>

<t><list style="symbols">
  <t>Lightweight M2M Bootstrap <xref target="LwM2M"/> provides a mechanism to provision keying material and configuration of any kind, according to a well-defined data model.</t>
  <t>FIDO Device Onboard <xref target="FDO"/> provides a mechanism to deliver an arbitrary block of data to devices. This block of data can contain trust anchors, cryptographic information, and other device configuration.</t>
  <t>Enrollment over Secure Transport (EST) <xref target="RFC7030"/> provides a mechanism to deliver certificates and, optionally, private keys to devices.</t>
</list></t>

</section>
</section>
<section anchor="threat-incorrect-firmwareversion"><name>Threat: Incorrect Firmware/Version</name>

<t>Incorrect firmware/version can come in two forms.</t>

<section anchor="threatfwold"><name>THREAT.FW.OLD</name>

<t>Old firmware present on device allows compromise of data sent to device, poisoning of data sent to service</t>

</section>
<section anchor="threatdevrogue"><name>THREAT.DEV.ROGUE</name>

<t>Rogue or simulated device emulates a real device, allows compromise of data sent to the device, or poisoning of data sent to service</t>

</section>
<section anchor="reqsecfwmeasure"><name>REQ.SEC.FW.MEASURE</name>

<t>To enable devices to report their current software version and related data securely, devices SHOULD support a support a mechanism to securely measure their firmware. This allows an IoT network to restrict access by non-compliant devices.</t>

</section>
<section anchor="technologies-to-implement-reqsecfwmeasure"><name>Technologies to implement REQ.SEC.FW.MEASURE</name>

<t>The technology used for securely measuring and reporting the firmware of a device is typically called remote attestation. A protocol is under development for conveying remote attestation measurements in a trustworthy way in <xref target="I-D.ietf-rats-architecture"/>. Likewise, document format is under development in <xref target="I-D.ietf-rats-eat"/>.</t>

</section>
</section>
<section anchor="threat-vulnerable-firmware"><name>Threat: Vulnerable Firmware</name>

<t>Devices with old firmware might have a known vulnerability. This could allow a threat actor to take over the device.</t>

<section anchor="threatfwknownvulnerability"><name>THREAT.FW.KNOWN.VULNERABILITY</name>

<t>If old firmware with known vulnerability cannot be altered. This allows exploit of known a vulnerability.</t>

</section>
<section anchor="reqsecfwremoteupdate"><name>REQ.SEC.FW.REMOTE.UPDATE</name>

<t>Software on unattended devices must be remotely-updatable.</t>

</section>
<section anchor="threatupdatecompromise"><name>THREAT.UPDATE.COMPROMISE</name>

<t>Compromise of the update system is fundamentally equivalent to persistent remote code execution. A threat actor that gains firmware update capability has extensive power over the device.</t>

</section>
<section anchor="reqsecupdatesecurity"><name>REQ.SEC.UPDATE.SECURITY</name>

<t>Software update mechanism must be secured (see RFC9124)</t>

</section>
<section anchor="technologies-to-implement-reqsecupdatesecurity"><name>Technologies to implement REQ.SEC.UPDATE.SECURITY</name>

<t>To enable devices to be updated securely in the field, they can support a remote update protocol such as <xref target="I-D.ietf-suit-manifest"/>. For securely deploying software to Trusted Execution Environments, the a secure Trusted Application delivery protocol should be used, such as <xref target="I-D.ietf-teep-architecture"/>.</t>

</section>
</section>
<section anchor="threat-supply-chain-attacks"><name>Threat: Supply Chain Attacks</name>

<t>Software of unknown origin may be used in a device. If an threat actor can gain control over the software supply chain, they may be able to sneak their code onto a device.</t>

<section anchor="riskswsupply"><name>RISK.SW.SUPPLY</name>

<t>Software of unknown origin may be used in a device</t>

</section>
<section anchor="threatswsupply"><name>THREAT.SW.SUPPLY</name>

<t>If software origin is not verified, a threat actor may deliberately and secretly seed the software supply chain with vulnerable code, enabling further compromise.</t>

</section>
<section anchor="reqsecswbom"><name>REQ.SEC.SW.BOM</name>

<t>To prove the provenance of a firmware update, update manifests SHOULD include (directly, or by secure reference) a Software Identifier or Software Bill of Materials,</t>

</section>
<section anchor="technologies-to-implement-reqsecupdatesecurity-1"><name>Technologies to implement REQ.SEC.UPDATE.SECURITY</name>

<t>In order to enable a device to prove provenance of its software, it or its network can use a software identifier such as <xref target="I-D.ietf-sacm-coswid"/>. Optionally, this software idenifier can be encapsulated in a manifest that includes hardware properties as well, such as <xref target="I-D.birkholz-rats-corim"/>.</t>

</section>
</section>
<section anchor="risk-verification-information-supply-chain"><name>Risk: Verification Information Supply Chain</name>

<t>Correct values for attestation results may not be known by Verifiers, causing them to log values, but not limit them.</t>

<section anchor="riskverifierdefaults"><name>RISK.VERIFIER.DEFAULTS</name>

<t>Without access to a source of verification information such as expected attestation results, a verifier may not be able to make correct decisions about the trustworthiness of a device.</t>

</section>
<section anchor="threattrustelevation"><name>THREAT.TRUST.ELEVATION</name>

<t>A threat actor deploys compromised software to devices; this is detected by monitoring systems, but not identified as an attack. If a threat actor can cause an attestation system to trust a device more than it should, this forms a new class of elevation of privilege: elevation of trust.</t>

</section>
<section anchor="reqsecverifierdata"><name>REQ.SEC.VERIFIER.DATA</name>

<t>Monitoring systems must know the expected values in Attestation results.</t>

</section>
<section anchor="technologies-to-implement-reqsecverifierdata"><name>Technologies to implement REQ.SEC.VERIFIER.DATA</name>

<t>To enable a Relying Party of the Remote Attestation to correctly evaluate the Attestation Report, the SBoM (such as <xref target="I-D.ietf-sacm-coswid"/>) can contain expected values for the Attestation Report. In addition, the expected information for hardware properties can be contained in another manifest, such as <xref target="I-D.birkholz-rats-corim"/>.</t>

<t>NOTE: Remote attestation terminology is fluid on this topic. A "Verifier" can be any system that appraises Evidence in remote attestation. It is expected that "appraisal" will be spread across at least two systems to maintain confidentiality and separation of responsibility: 1) a Verifier that ensures that the attestation Evidence is produced by genuine hardware, not tampered with, and not signed by revoked keys and 2) a monitoring system taking on the role of Verifier and Relying Party that appraises whether a device has the correct software versions and initiates remediation if not.</t>

</section>
</section>
<section anchor="threat-spurious-network-capabilites"><name>Threat: Spurious Network Capabilites</name>

<t>Devices may have additional, unneeded capabilites that are detrimental to network security. While the best option is to disable this functionality in software, this is not always practical</t>

<section anchor="threatnetspuriousfunctions"><name>THREAT.NET.SPURIOUS.FUNCTIONS</name>

<t>Devices may contain intentional or accidental capabilities to make networks vulnerable or launch attacks on other networks. These capabilities are extremely costly to discover by inspection or audit.
Requirement: Devices (or their supply chains) must advertise their network access requirements and networks must enforce that devices adhere to their stated network access requirements.</t>

</section>
<section anchor="reqsecnetacl"><name>REQ.SEC.NET.ACL</name>

<t>To ensure that network infrastructure is configured discern the difference between authentic traffic and anomalous traffic, network infrastructure can implement fine-grained access control over how a device can use a network</t>

</section>
<section anchor="threatnetbadacl"><name>THREAT.NET.BAD.ACL</name>

<t>If a service hosting network access requirements documents is compromised, it can be used to enable malicious devices to mount attacks.</t>

</section>
<section anchor="reqsecnetaclsignature"><name>REQ.SEC.NET.ACL.SIGNATURE</name>

<t>Network access ACL documents should be signed. Best practice is to use offline keys for signing.</t>

</section>
<section anchor="threatnetwrongacl"><name>THREAT.NET.WRONG.ACL</name>

<t>If devices are permitted to self-report ACLs without authentication by a trusted party, they can report any ACL recognised by the network. A device can mis-advertise its network access requirements, pretending to be a different, but recognised and more privileged device (potentially cloning MAC addresses, keys, etc.)</t>

</section>
<section anchor="reqsecnetacltrust"><name>REQ.SEC.NET.ACL.TRUST</name>

<t>Network Access Requirements documents must be secured against tampering and misreporting</t>

</section>
<section anchor="risknetaclconflation"><name>RISK.NET.ACL.CONFLATION</name>

<t>Network Access Requirements documents embedded in or referenced from device certificates conflate two capabilities for network operators: network access requirement authorship (potentially delegated) and network access requirement audit. While network operators should audit network access requirements, authoring those requirements should be done by the authors of the device behavior.</t>

<t>Failure to separate these capabilities has the potential to lead to failed device behaviour due to wrong Network Access Requirements descriptions, leading to disabling of the network ACL system in the name of expediency.</t>

</section>
<section anchor="reqsecnetaclseparation"><name>REQ.SEC.NET.ACL.SEPARATION</name>

<t>Requirement: If Network Access Requirements are embedded in or referenced by device certificates, the responsibility for network access requirement authorship should be delegated to the device application authors. Alternatively, this can be done explicitly by tying device application authorship to device network access requirements authorship.</t>

</section>
<section anchor="technologies-to-mitigate-spurious-network-capabilities"><name>Technologies to Mitigate Spurious Network Capabilities</name>

<t><list style="numbers">
  <t>THREAT.NET.SPURIOUS.FUNCTIONS can be mitigated by use of <xref target="RFC8520"/> Manufacturer Usage Descriptions (MUDs) and a MUD Controller which accepts MUD files in order to automatically program rules into the network infrastructure.</t>
  <t>THREAT.NET.BAD.ACL To prevent a threat actor from distributing their own MUD files via a MUD server, these can be signed, preferably with an offline key as described in <xref target="RFC8520"/>.</t>
  <t>THREAT.NET.WRONG.ACL can be mitigated by using 802.1X, or SUIT to contain a MUD file or MUD file reference and integrity check. Alternatively, the device's RATS attestation results can be compared to a known list of device profiles and a MUD can be applied as a result without intervention from the remote device.</t>
  <t>REQ.SEC.NET.ACL.SEPARATION can be mitigated either through key delegation or through the use of SUIT encapsulation of the MUD file. A third option is to use a third-party ACL provider, such as iotopia.</t>
</list></t>

</section>
</section>
<section anchor="risk-dos-of-acl-server"><name>Risk: DoS of ACL server</name>

<section anchor="risknetaclupdate"><name>RISK.NET.ACL.UPDATE</name>

<t>Recently updated devices may incur latency penalties when a new network access requirements reference must be resolved and verified.</t>

</section>
<section anchor="threatnetacldos"><name>THREAT.NET.ACL.DOS</name>

<t>A threat actor may block access to a distributor of network access requirements documents, thus disabling all devices referencing the network access requirements documents it hosts, without any network intrusion necessary against target networks.</t>

</section>
<section anchor="reqsecnetacllocal"><name>REQ.SEC.NET.ACL.LOCAL</name>

<t>Network access requirements documents should be distributed in advance of use by any device because they constitute a non-local software dependency</t>

</section>
<section anchor="technologies-to-implement-reqsecnetacllocal"><name>Technologies to Implement REQ.SEC.NET.ACL.LOCAL</name>

<t>In order for network infrastructure to be configured in advance of any changes to devices, MUD files can be transported (directly or by secure reference) within update manifests.</t>

<t>This allows local infrastructure to delay installation of a firmware update until a new MUD file can be fetched and audited.</t>

</section>
</section>
<section anchor="threat-delays-in-acl-remediation"><name>Threat: Delays in ACL Remediation</name>

<t>If an ACL is wrong, network operators need it to be fixed quickly.</t>

<section anchor="threatnetaclbroad"><name>THREAT.NET.ACL.BROAD</name>

<t>A network access requirements document grants permissions to a device that are too broad, but the provider of firmware updates is slow to respond, meaning that MUD file delivery in SUIT will take too long.</t>

</section>
<section anchor="reqsecnetacldynamic"><name>REQ.SEC.NET.ACL.DYNAMIC</name>

<t>It must be possible to distribute reduced permissions to network access controllers to mitigate a wrong ACL. To enable rapid response to evolving threats, the MUD controller SHOULD also support dynamic update of MUD files.</t>

</section>
<section anchor="technologies-that-implement-reqsecnetacldynamic"><name>Technologies that implement REQ.SEC.NET.ACL.DYNAMIC</name>

<t>If a MUD file is delivered by SUIT rather than via a remote server, then a secondary delivery channel can be used. This can include manually overriding the ACL in the network infrastructure. It can also include using SUIT to deliver the key that is used to verify signed MUD files from a specific URL, however in this scenario, THREAT.NET.ACL.DOS remains unmitigated.</t>

</section>
</section>
<section anchor="threat-vulnerable-devices"><name>Threat: Vulnerable Devices</name>

<t>If a vulnerable device is connected to the network, it could be a risk to the whole network.</t>

<section anchor="threatnetvulnerabledevice"><name>THREAT.NET.VULNERABLE.DEVICE</name>

<t>Old firmware with known vulnerability allows exploit until it is updated.</t>

</section>
<section anchor="reqsecnetdmz"><name>REQ.SEC.NET.DMZ</name>

<t>Network infrastructure can apply risk management policy to devices that attest non-compliant configuration. For example, a device with out-of-date firmware may only be permitted to access the update system.</t>

</section>
<section anchor="technologies-to-implement-reqsecnetdmz"><name>Technologies to Implement REQ.SEC.NET.DMZ</name>

<t>Using MUD and RATS, a network operator can force a device onto a DMZ network containing only attestation and SUIT update services until it successfully attests a correct firmware version.</t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC8520' target='https://www.rfc-editor.org/info/rfc8520'>
<front>
<title>Manufacturer Usage Description Specification</title>
<author fullname='E. Lear' initials='E.' surname='Lear'><organization/></author>
<author fullname='R. Droms' initials='R.' surname='Droms'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2019'/>
<abstract><t>This memo specifies a component-based architecture for Manufacturer Usage Descriptions (MUDs).  The goal of MUD is to provide a means for end devices to signal to the network what sort of access and network functionality they require to properly function.  The initial focus is on access control.  Later work can delve into other aspects.</t><t>This memo specifies two YANG modules, IPv4 and IPv6 DHCP options, a Link Layer Discovery Protocol (LLDP) TLV, a URL, an X.509 certificate extension, and a means to sign and verify the descriptions.</t></abstract>
</front>
<seriesInfo name='RFC' value='8520'/>
<seriesInfo name='DOI' value='10.17487/RFC8520'/>
</reference>



<reference anchor='RFC8995' target='https://www.rfc-editor.org/info/rfc8995'>
<front>
<title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
<author fullname='M. Pritikin' initials='M.' surname='Pritikin'><organization/></author>
<author fullname='M. Richardson' initials='M.' surname='Richardson'><organization/></author>
<author fullname='T. Eckert' initials='T.' surname='Eckert'><organization/></author>
<author fullname='M. Behringer' initials='M.' surname='Behringer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<date month='May' year='2021'/>
<abstract><t>This document specifies automated bootstrapping of an Autonomic Control Plane.  To do this, a Secure Key Infrastructure is bootstrapped.  This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline.  We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device.  The established secure connection can be used to deploy a locally issued certificate to the device as well.</t></abstract>
</front>
<seriesInfo name='RFC' value='8995'/>
<seriesInfo name='DOI' value='10.17487/RFC8995'/>
</reference>



<reference anchor='RFC7030' target='https://www.rfc-editor.org/info/rfc7030'>
<front>
<title>Enrollment over Secure Transport</title>
<author fullname='M. Pritikin' initials='M.' role='editor' surname='Pritikin'><organization/></author>
<author fullname='P. Yee' initials='P.' role='editor' surname='Yee'><organization/></author>
<author fullname='D. Harkins' initials='D.' role='editor' surname='Harkins'><organization/></author>
<date month='October' year='2013'/>
<abstract><t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t></abstract>
</front>
<seriesInfo name='RFC' value='7030'/>
<seriesInfo name='DOI' value='10.17487/RFC7030'/>
</reference>


<reference anchor="FDO" target="https://fidoalliance.org/specs/FDO/FIDO-Device-Onboard-RD-v1.0-20201202.html">
  <front>
    <title>FIDO Device Onboarding</title>
    <author initials="." surname="FIDO Alliance">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="LwM2M" target="http://openmobilealliance.org/release/LightweightM2M/V1_2-20201110-A/OMA-TS-LightweightM2M_Core-V1_2-20201110-A.pdf">
  <front>
    <title>LwM2M Core Specification</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="SWID" target="https://csrc.nist.gov/Projects/Software-Identification-SWID/guidelines">
  <front>
    <title>Software Identification (SWID) Tagging</title>
    <author initials="." surname="NIST">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>



<reference anchor='I-D.ietf-rats-eat'>
   <front>
      <title>The Entity Attestation Token (EAT)</title>
      <author fullname='Laurence Lundblade'>
	 <organization>Security Theory LLC</organization>
      </author>
      <author fullname='Giridhar Mandyam'>
	 <organization>Qualcomm Technologies Inc.</organization>
      </author>
      <author fullname='Jeremy O&#39;Donoghue'>
	 <organization>Qualcomm Technologies Inc.</organization>
      </author>
      <date day='10' month='July' year='2022'/>
      <abstract>
	 <t>   An Entity Attestation Token (EAT) provides an attested claims set
   that describes state and characteristics of an entity, a device like
   a phone, IoT device, network equipment or such.  This claims set is
   used by a relying party, server or service to determine how much it
   wishes to trust the entity.

   An EAT is either a CBOR Web Token (CWT) or JSON Web Token (JWT) with
   attestation-oriented claims.  To a large degree, all this document
   does is extend CWT and JWT.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-rats-eat-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-rats-eat-14.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-suit-manifest'>
   <front>
      <title>A Concise Binary Object Representation (CBOR)-based Serialization Format for the Software Updates for Internet of Things (SUIT) Manifest</title>
      <author fullname='Brendan Moran'>
	 <organization>Arm Limited</organization>
      </author>
      <author fullname='Hannes Tschofenig'>
	 <organization>Arm Limited</organization>
      </author>
      <author fullname='Henk Birkholz'>
	 <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Koen Zandberg'>
	 <organization>Inria</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   This specification describes the format of a manifest.  A manifest is
   a bundle of metadata about code/data obtained by a recipient (chiefly
   the firmware for an IoT device), where to find the that code/data,
   the devices to which it applies, and cryptographic information
   protecting the manifest.  Software updates and Trusted Invocation
   both tend to use sequences of common operations, so the manifest
   encodes those sequences of operations, rather than declaring the
   metadata.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-manifest-18'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-suit-manifest-18.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-sacm-coswid'>
   <front>
      <title>Concise Software Identification Tags</title>
      <author fullname='Henk Birkholz'>
	 <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Jessica Fitzgerald-McKay'>
	 <organization>National Security Agency</organization>
      </author>
      <author fullname='Charles Schmidt'>
	 <organization>The MITRE Corporation</organization>
      </author>
      <author fullname='David Waltermire'>
	 <organization>National Institute of Standards and Technology</organization>
      </author>
      <date day='7' month='March' year='2022'/>
      <abstract>
	 <t>   ISO/IEC 19770-2:2015 Software Identification (SWID) tags provide an
   extensible XML-based structure to identify and describe individual
   software components, patches, and installation bundles.  SWID tag
   representations can be too large for devices with network and storage
   constraints.  This document defines a concise representation of SWID
   tags: Concise SWID (CoSWID) tags.  CoSWID supports a similar set of
   semantics and features as SWID tags, as well as new semantics that
   allow CoSWIDs to describe additional types of information, all in a
   more memory efficient format.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-sacm-coswid-21'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-sacm-coswid-21.txt' type='TXT'/>
</reference>


<reference anchor='I-D.birkholz-rats-corim'>
   <front>
      <title>Concise Reference Integrity Manifest</title>
      <author fullname='Henk Birkholz'>
	 <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Thomas Fossati'>
	 <organization>arm</organization>
      </author>
      <author fullname='Yogesh Deshpande'>
	 <organization>arm</organization>
      </author>
      <author fullname='Ned Smith'>
	 <organization>Intel</organization>
      </author>
      <author fullname='Wei Pan'>
	 <organization>Huawei Technologies</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   Remote Attestation Procedures (RATS) enable Relying Parties to assess
   the trustworthiness of a remote Attester and therefore to decide
   whether to engage in secure interactions with it.  Evidence about
   trustworthiness can be rather complex and it is deemed unrealistic
   that every Relying Party is capable of the appraisal of Evidence.
   Therefore that burden is typically offloaded to a Verifier.  In order
   to conduct Evidence appraisal, a Verifier requires not only fresh
   Evidence from an Attester, but also trusted Endorsements and
   Reference Values from Endorsers and Reference Value Providers, such
   as manufacturers, distributors, or device owners.  This document
   specifies Concise Reference Integrity Manifests (CoRIM) that
   represent Endorsements and Reference Values in CBOR format.
   Composite devices or systems are represented by a collection of
   Concise Module Identifiers (CoMID) and Concise Software Identifiers
   (CoSWID) bundled in a CoRIM document.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-birkholz-rats-corim-03'/>
   <format target='https://www.ietf.org/archive/id/draft-birkholz-rats-corim-03.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-teep-architecture'>
   <front>
      <title>Trusted Execution Environment Provisioning (TEEP) Architecture</title>
      <author fullname='Mingliang Pei'>
	 <organization>Broadcom</organization>
      </author>
      <author fullname='Hannes Tschofenig'>
	 <organization>Arm Limited</organization>
      </author>
      <author fullname='Dave Thaler'>
	 <organization>Microsoft</organization>
      </author>
      <author fullname='David Wheeler'>
	 <organization>Amazon</organization>
      </author>
      <date day='11' month='July' year='2022'/>
      <abstract>
	 <t>   A Trusted Execution Environment (TEE) is an environment that enforces
   that any code within that environment cannot be tampered with, and
   that any data used by such code cannot be read or tampered with by
   any code outside that environment.  This architecture document
   motivates the design and standardization of a protocol for managing
   the lifecycle of trusted applications running inside such a TEE.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teep-architecture-18'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teep-architecture-18.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-rats-architecture'>
   <front>
      <title>Remote Attestation Procedures Architecture</title>
      <author fullname='Henk Birkholz'>
	 <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Dave Thaler'>
	 <organization>Microsoft</organization>
      </author>
      <author fullname='Michael Richardson'>
	 <organization>Sandelman Software Works</organization>
      </author>
      <author fullname='Ned Smith'>
	 <organization>Intel Corporation</organization>
      </author>
      <author fullname='Wei Pan'>
	 <organization>Huawei Technologies</organization>
      </author>
      <date day='14' month='June' year='2022'/>
      <abstract>
	 <t>   In network protocol exchanges it is often useful for one end of a
   communication to know whether the other end is in an intended
   operating state.  This document provides an architectural overview of
   the entities involved that make such tests possible through the
   process of generating, conveying, and evaluating evidentiary claims.
   An attempt is made to provide for a model that is neutral toward
   processor architectures, the content of claims, and protocols.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-rats-architecture-18'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-rats-architecture-18.txt' type='TXT'/>
</reference>


<reference anchor="IoTopia" target="https://globalplatform.org/iotopia/mud-file-service/">
  <front>
    <title>Global Platform Iotopia</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>





  </back>

<!-- ##markdown-source:
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
59tLHT8OBv8D2/XLQWpFAAA=

-->

</rfc>

